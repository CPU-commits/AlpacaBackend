// Code generated by SQLBoiler 4.19.5 (https://github.com/aarondl/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import "testing"

// TestToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestToOne(t *testing.T) {
	t.Run("AccessToSessionUsingIDSessionSession", testAccessToOneSessionUsingIDSessionSession)
	t.Run("AppointmentImageToAppointmentUsingIDAppointmentAppointment", testAppointmentImageToOneAppointmentUsingIDAppointmentAppointment)
	t.Run("AppointmentImageToImageUsingIDImageImage", testAppointmentImageToOneImageUsingIDImageImage)
	t.Run("AppointmentToDesignUsingIDDesignDesign", testAppointmentToOneDesignUsingIDDesignDesign)
	t.Run("AppointmentToStudioUsingIDStudioStudio", testAppointmentToOneStudioUsingIDStudioStudio)
	t.Run("AppointmentToUserUsingIDTattooArtistUser", testAppointmentToOneUserUsingIDTattooArtistUser)
	t.Run("AppointmentToUserUsingIDUserUser", testAppointmentToOneUserUsingIDUserUser)
	t.Run("AuthToUserUsingIDUserUser", testAuthToOneUserUsingIDUserUser)
	t.Run("CodeToUserUsingIDUserUser", testCodeToOneUserUsingIDUserUser)
	t.Run("DesignToImageUsingIDImageImage", testDesignToOneImageUsingIDImageImage)
	t.Run("DesignToProfileUsingIDProfileProfile", testDesignToOneProfileUsingIDProfileProfile)
	t.Run("FollowToProfileUsingIDProfileProfile", testFollowToOneProfileUsingIDProfileProfile)
	t.Run("FollowToStudioUsingIDStudioStudio", testFollowToOneStudioUsingIDStudioStudio)
	t.Run("FollowToUserUsingIDUserUser", testFollowToOneUserUsingIDUserUser)
	t.Run("LikeToPostUsingIDPostPost", testLikeToOnePostUsingIDPostPost)
	t.Run("LikeToProfileUsingIDProfileProfile", testLikeToOneProfileUsingIDProfileProfile)
	t.Run("LikeToUserUsingIDUserUser", testLikeToOneUserUsingIDUserUser)
	t.Run("LinkToStudioUsingIDStudioStudio", testLinkToOneStudioUsingIDStudioStudio)
	t.Run("LinkToUserUsingIDUserUser", testLinkToOneUserUsingIDUserUser)
	t.Run("PaymentToStudioUsingIDStudioStudio", testPaymentToOneStudioUsingIDStudioStudio)
	t.Run("PaymentToSubscriptionUsingIDSubscriptionSubscription", testPaymentToOneSubscriptionUsingIDSubscriptionSubscription)
	t.Run("PaymentToUserUsingIDUserUser", testPaymentToOneUserUsingIDUserUser)
	t.Run("PostImageToImageUsingIDImageImage", testPostImageToOneImageUsingIDImageImage)
	t.Run("PostImageToPostUsingIDPostPost", testPostImageToOnePostUsingIDPostPost)
	t.Run("PostToProfileUsingIDProfileProfile", testPostToOneProfileUsingIDProfileProfile)
	t.Run("PostToStudioUsingIDStudioStudio", testPostToOneStudioUsingIDStudioStudio)
	t.Run("ProfileToImageUsingIDAvatarImage", testProfileToOneImageUsingIDAvatarImage)
	t.Run("ProfileToUserUsingIDUserUser", testProfileToOneUserUsingIDUserUser)
	t.Run("ReviewToAppointmentUsingIDAppointmentAppointment", testReviewToOneAppointmentUsingIDAppointmentAppointment)
	t.Run("ReviewToProfileUsingIDProfileProfile", testReviewToOneProfileUsingIDProfileProfile)
	t.Run("ReviewToUserUsingIDUserUser", testReviewToOneUserUsingIDUserUser)
	t.Run("RolesUserToUserUsingIDUserUser", testRolesUserToOneUserUsingIDUserUser)
	t.Run("SessionToAuthUsingIDAuthAuth", testSessionToOneAuthUsingIDAuthAuth)
	t.Run("ShareToPostUsingIDPostPost", testShareToOnePostUsingIDPostPost)
	t.Run("ShareToUserUsingIDUserUser", testShareToOneUserUsingIDUserUser)
	t.Run("StudioAdminsPermissionToStudioUserUsingIDAdminStudioUser", testStudioAdminsPermissionToOneStudioUserUsingIDAdminStudioUser)
	t.Run("StudioUserHistoryToStudioUsingIDStudioStudio", testStudioUserHistoryToOneStudioUsingIDStudioStudio)
	t.Run("StudioUserHistoryToUserUsingIDUserUser", testStudioUserHistoryToOneUserUsingIDUserUser)
	t.Run("StudioUserToStudioUsingIDStudioStudio", testStudioUserToOneStudioUsingIDStudioStudio)
	t.Run("StudioUserToUserUsingIDUserUser", testStudioUserToOneUserUsingIDUserUser)
	t.Run("StudioToImageUsingIDAvatarImage", testStudioToOneImageUsingIDAvatarImage)
	t.Run("StudioToImageUsingIDBannerImage", testStudioToOneImageUsingIDBannerImage)
	t.Run("StudioToUserUsingIDOwnerUser", testStudioToOneUserUsingIDOwnerUser)
	t.Run("SubscriptionToPlanUsingIDPlanPlan", testSubscriptionToOnePlanUsingIDPlanPlan)
	t.Run("SubscriptionToStudioUsingIDStudioStudio", testSubscriptionToOneStudioUsingIDStudioStudio)
	t.Run("SubscriptionToUserUsingIDUserUser", testSubscriptionToOneUserUsingIDUserUser)
	t.Run("TattooToImageUsingIDImageImage", testTattooToOneImageUsingIDImageImage)
	t.Run("TattooToPostUsingIDPostPost", testTattooToOnePostUsingIDPostPost)
	t.Run("TattooToProfileUsingIDProfileProfile", testTattooToOneProfileUsingIDProfileProfile)
	t.Run("TattooToStudioUsingIDStudioStudio", testTattooToOneStudioUsingIDStudioStudio)
	t.Run("TokenPasswordToUserUsingIDUserUser", testTokenPasswordToOneUserUsingIDUserUser)
	t.Run("TokenToUserUsingIDUserUser", testTokenToOneUserUsingIDUserUser)
	t.Run("ViewToLinkUsingIDLinkLink", testViewToOneLinkUsingIDLinkLink)
	t.Run("ViewToPostUsingIDPostPost", testViewToOnePostUsingIDPostPost)
	t.Run("ViewToProfileUsingIDProfileProfile", testViewToOneProfileUsingIDProfileProfile)
	t.Run("ViewToStudioUsingIDStudioStudio", testViewToOneStudioUsingIDStudioStudio)
	t.Run("ViewToTattooUsingIDTattooTattoo", testViewToOneTattooUsingIDTattooTattoo)
	t.Run("ViewToUserUsingIDUserUser", testViewToOneUserUsingIDUserUser)
}

// TestOneToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOne(t *testing.T) {
	t.Run("AppointmentToReviewUsingIDAppointmentReview", testAppointmentOneToOneReviewUsingIDAppointmentReview)
	t.Run("ImageToAppointmentImageUsingIDImageAppointmentImage", testImageOneToOneAppointmentImageUsingIDImageAppointmentImage)
	t.Run("ImageToDesignUsingIDImageDesign", testImageOneToOneDesignUsingIDImageDesign)
	t.Run("ImageToPostImageUsingIDImagePostImage", testImageOneToOnePostImageUsingIDImagePostImage)
	t.Run("ImageToProfileUsingIDAvatarProfile", testImageOneToOneProfileUsingIDAvatarProfile)
	t.Run("ImageToStudioUsingIDAvatarStudio", testImageOneToOneStudioUsingIDAvatarStudio)
	t.Run("ImageToStudioUsingIDBannerStudio", testImageOneToOneStudioUsingIDBannerStudio)
	t.Run("ImageToTattooUsingIDImageTattoo", testImageOneToOneTattooUsingIDImageTattoo)
	t.Run("UserToAuthUsingIDUserAuth", testUserOneToOneAuthUsingIDUserAuth)
	t.Run("UserToProfileUsingIDUserProfile", testUserOneToOneProfileUsingIDUserProfile)
	t.Run("UserToTokenPasswordUsingIDUserTokenPassword", testUserOneToOneTokenPasswordUsingIDUserTokenPassword)
}

// TestToMany tests cannot be run in parallel
// or deadlocks can occur.
func TestToMany(t *testing.T) {
	t.Run("AppointmentToIDAppointmentAppointmentImages", testAppointmentToManyIDAppointmentAppointmentImages)
	t.Run("AuthToIDAuthSessions", testAuthToManyIDAuthSessions)
	t.Run("DesignToIDDesignAppointments", testDesignToManyIDDesignAppointments)
	t.Run("LinkToIDLinkViews", testLinkToManyIDLinkViews)
	t.Run("PlanToIDPlanSubscriptions", testPlanToManyIDPlanSubscriptions)
	t.Run("PostToIDPostLikes", testPostToManyIDPostLikes)
	t.Run("PostToIDPostPostImages", testPostToManyIDPostPostImages)
	t.Run("PostToIDPostShares", testPostToManyIDPostShares)
	t.Run("PostToIDPostTattoos", testPostToManyIDPostTattoos)
	t.Run("PostToIDPostViews", testPostToManyIDPostViews)
	t.Run("ProfileToIDProfileDesigns", testProfileToManyIDProfileDesigns)
	t.Run("ProfileToIDProfileFollows", testProfileToManyIDProfileFollows)
	t.Run("ProfileToIDProfileLikes", testProfileToManyIDProfileLikes)
	t.Run("ProfileToIDProfilePosts", testProfileToManyIDProfilePosts)
	t.Run("ProfileToIDProfileReviews", testProfileToManyIDProfileReviews)
	t.Run("ProfileToIDProfileTattoos", testProfileToManyIDProfileTattoos)
	t.Run("ProfileToIDProfileViews", testProfileToManyIDProfileViews)
	t.Run("SessionToIDSessionAccesses", testSessionToManyIDSessionAccesses)
	t.Run("StudioUserToIDAdminStudioAdminsPermissions", testStudioUserToManyIDAdminStudioAdminsPermissions)
	t.Run("StudioToIDStudioAppointments", testStudioToManyIDStudioAppointments)
	t.Run("StudioToIDStudioFollows", testStudioToManyIDStudioFollows)
	t.Run("StudioToIDStudioLinks", testStudioToManyIDStudioLinks)
	t.Run("StudioToIDStudioPayments", testStudioToManyIDStudioPayments)
	t.Run("StudioToIDStudioPosts", testStudioToManyIDStudioPosts)
	t.Run("StudioToIDStudioStudioUserHistories", testStudioToManyIDStudioStudioUserHistories)
	t.Run("StudioToIDStudioStudioUsers", testStudioToManyIDStudioStudioUsers)
	t.Run("StudioToIDStudioSubscriptions", testStudioToManyIDStudioSubscriptions)
	t.Run("StudioToIDStudioTattoos", testStudioToManyIDStudioTattoos)
	t.Run("StudioToIDStudioViews", testStudioToManyIDStudioViews)
	t.Run("SubscriptionToIDSubscriptionPayments", testSubscriptionToManyIDSubscriptionPayments)
	t.Run("TattooToIDTattooViews", testTattooToManyIDTattooViews)
	t.Run("UserToIDTattooArtistAppointments", testUserToManyIDTattooArtistAppointments)
	t.Run("UserToIDUserAppointments", testUserToManyIDUserAppointments)
	t.Run("UserToIDUserCodes", testUserToManyIDUserCodes)
	t.Run("UserToIDUserFollows", testUserToManyIDUserFollows)
	t.Run("UserToIDUserLikes", testUserToManyIDUserLikes)
	t.Run("UserToIDUserLinks", testUserToManyIDUserLinks)
	t.Run("UserToIDUserPayments", testUserToManyIDUserPayments)
	t.Run("UserToIDUserReviews", testUserToManyIDUserReviews)
	t.Run("UserToIDUserRolesUsers", testUserToManyIDUserRolesUsers)
	t.Run("UserToIDUserShares", testUserToManyIDUserShares)
	t.Run("UserToIDUserStudioUserHistories", testUserToManyIDUserStudioUserHistories)
	t.Run("UserToIDUserStudioUsers", testUserToManyIDUserStudioUsers)
	t.Run("UserToIDOwnerStudios", testUserToManyIDOwnerStudios)
	t.Run("UserToIDUserSubscriptions", testUserToManyIDUserSubscriptions)
	t.Run("UserToIDUserTokens", testUserToManyIDUserTokens)
	t.Run("UserToIDUserViews", testUserToManyIDUserViews)
}

// TestToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneSet(t *testing.T) {
	t.Run("AccessToSessionUsingIDSessionAccesses", testAccessToOneSetOpSessionUsingIDSessionSession)
	t.Run("AppointmentImageToAppointmentUsingIDAppointmentAppointmentImages", testAppointmentImageToOneSetOpAppointmentUsingIDAppointmentAppointment)
	t.Run("AppointmentImageToImageUsingIDImageAppointmentImage", testAppointmentImageToOneSetOpImageUsingIDImageImage)
	t.Run("AppointmentToDesignUsingIDDesignAppointments", testAppointmentToOneSetOpDesignUsingIDDesignDesign)
	t.Run("AppointmentToStudioUsingIDStudioAppointments", testAppointmentToOneSetOpStudioUsingIDStudioStudio)
	t.Run("AppointmentToUserUsingIDTattooArtistAppointments", testAppointmentToOneSetOpUserUsingIDTattooArtistUser)
	t.Run("AppointmentToUserUsingIDUserAppointments", testAppointmentToOneSetOpUserUsingIDUserUser)
	t.Run("AuthToUserUsingIDUserAuth", testAuthToOneSetOpUserUsingIDUserUser)
	t.Run("CodeToUserUsingIDUserCodes", testCodeToOneSetOpUserUsingIDUserUser)
	t.Run("DesignToImageUsingIDImageDesign", testDesignToOneSetOpImageUsingIDImageImage)
	t.Run("DesignToProfileUsingIDProfileDesigns", testDesignToOneSetOpProfileUsingIDProfileProfile)
	t.Run("FollowToProfileUsingIDProfileFollows", testFollowToOneSetOpProfileUsingIDProfileProfile)
	t.Run("FollowToStudioUsingIDStudioFollows", testFollowToOneSetOpStudioUsingIDStudioStudio)
	t.Run("FollowToUserUsingIDUserFollows", testFollowToOneSetOpUserUsingIDUserUser)
	t.Run("LikeToPostUsingIDPostLikes", testLikeToOneSetOpPostUsingIDPostPost)
	t.Run("LikeToProfileUsingIDProfileLikes", testLikeToOneSetOpProfileUsingIDProfileProfile)
	t.Run("LikeToUserUsingIDUserLikes", testLikeToOneSetOpUserUsingIDUserUser)
	t.Run("LinkToStudioUsingIDStudioLinks", testLinkToOneSetOpStudioUsingIDStudioStudio)
	t.Run("LinkToUserUsingIDUserLinks", testLinkToOneSetOpUserUsingIDUserUser)
	t.Run("PaymentToStudioUsingIDStudioPayments", testPaymentToOneSetOpStudioUsingIDStudioStudio)
	t.Run("PaymentToSubscriptionUsingIDSubscriptionPayments", testPaymentToOneSetOpSubscriptionUsingIDSubscriptionSubscription)
	t.Run("PaymentToUserUsingIDUserPayments", testPaymentToOneSetOpUserUsingIDUserUser)
	t.Run("PostImageToImageUsingIDImagePostImage", testPostImageToOneSetOpImageUsingIDImageImage)
	t.Run("PostImageToPostUsingIDPostPostImages", testPostImageToOneSetOpPostUsingIDPostPost)
	t.Run("PostToProfileUsingIDProfilePosts", testPostToOneSetOpProfileUsingIDProfileProfile)
	t.Run("PostToStudioUsingIDStudioPosts", testPostToOneSetOpStudioUsingIDStudioStudio)
	t.Run("ProfileToImageUsingIDAvatarProfile", testProfileToOneSetOpImageUsingIDAvatarImage)
	t.Run("ProfileToUserUsingIDUserProfile", testProfileToOneSetOpUserUsingIDUserUser)
	t.Run("ReviewToAppointmentUsingIDAppointmentReview", testReviewToOneSetOpAppointmentUsingIDAppointmentAppointment)
	t.Run("ReviewToProfileUsingIDProfileReviews", testReviewToOneSetOpProfileUsingIDProfileProfile)
	t.Run("ReviewToUserUsingIDUserReviews", testReviewToOneSetOpUserUsingIDUserUser)
	t.Run("RolesUserToUserUsingIDUserRolesUsers", testRolesUserToOneSetOpUserUsingIDUserUser)
	t.Run("SessionToAuthUsingIDAuthSessions", testSessionToOneSetOpAuthUsingIDAuthAuth)
	t.Run("ShareToPostUsingIDPostShares", testShareToOneSetOpPostUsingIDPostPost)
	t.Run("ShareToUserUsingIDUserShares", testShareToOneSetOpUserUsingIDUserUser)
	t.Run("StudioAdminsPermissionToStudioUserUsingIDAdminStudioAdminsPermissions", testStudioAdminsPermissionToOneSetOpStudioUserUsingIDAdminStudioUser)
	t.Run("StudioUserHistoryToStudioUsingIDStudioStudioUserHistories", testStudioUserHistoryToOneSetOpStudioUsingIDStudioStudio)
	t.Run("StudioUserHistoryToUserUsingIDUserStudioUserHistories", testStudioUserHistoryToOneSetOpUserUsingIDUserUser)
	t.Run("StudioUserToStudioUsingIDStudioStudioUsers", testStudioUserToOneSetOpStudioUsingIDStudioStudio)
	t.Run("StudioUserToUserUsingIDUserStudioUsers", testStudioUserToOneSetOpUserUsingIDUserUser)
	t.Run("StudioToImageUsingIDAvatarStudio", testStudioToOneSetOpImageUsingIDAvatarImage)
	t.Run("StudioToImageUsingIDBannerStudio", testStudioToOneSetOpImageUsingIDBannerImage)
	t.Run("StudioToUserUsingIDOwnerStudios", testStudioToOneSetOpUserUsingIDOwnerUser)
	t.Run("SubscriptionToPlanUsingIDPlanSubscriptions", testSubscriptionToOneSetOpPlanUsingIDPlanPlan)
	t.Run("SubscriptionToStudioUsingIDStudioSubscriptions", testSubscriptionToOneSetOpStudioUsingIDStudioStudio)
	t.Run("SubscriptionToUserUsingIDUserSubscriptions", testSubscriptionToOneSetOpUserUsingIDUserUser)
	t.Run("TattooToImageUsingIDImageTattoo", testTattooToOneSetOpImageUsingIDImageImage)
	t.Run("TattooToPostUsingIDPostTattoos", testTattooToOneSetOpPostUsingIDPostPost)
	t.Run("TattooToProfileUsingIDProfileTattoos", testTattooToOneSetOpProfileUsingIDProfileProfile)
	t.Run("TattooToStudioUsingIDStudioTattoos", testTattooToOneSetOpStudioUsingIDStudioStudio)
	t.Run("TokenPasswordToUserUsingIDUserTokenPassword", testTokenPasswordToOneSetOpUserUsingIDUserUser)
	t.Run("TokenToUserUsingIDUserTokens", testTokenToOneSetOpUserUsingIDUserUser)
	t.Run("ViewToLinkUsingIDLinkViews", testViewToOneSetOpLinkUsingIDLinkLink)
	t.Run("ViewToPostUsingIDPostViews", testViewToOneSetOpPostUsingIDPostPost)
	t.Run("ViewToProfileUsingIDProfileViews", testViewToOneSetOpProfileUsingIDProfileProfile)
	t.Run("ViewToStudioUsingIDStudioViews", testViewToOneSetOpStudioUsingIDStudioStudio)
	t.Run("ViewToTattooUsingIDTattooViews", testViewToOneSetOpTattooUsingIDTattooTattoo)
	t.Run("ViewToUserUsingIDUserViews", testViewToOneSetOpUserUsingIDUserUser)
}

// TestToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneRemove(t *testing.T) {
	t.Run("AppointmentToDesignUsingIDDesignAppointments", testAppointmentToOneRemoveOpDesignUsingIDDesignDesign)
	t.Run("AppointmentToStudioUsingIDStudioAppointments", testAppointmentToOneRemoveOpStudioUsingIDStudioStudio)
	t.Run("AppointmentToUserUsingIDTattooArtistAppointments", testAppointmentToOneRemoveOpUserUsingIDTattooArtistUser)
	t.Run("FollowToProfileUsingIDProfileFollows", testFollowToOneRemoveOpProfileUsingIDProfileProfile)
	t.Run("FollowToStudioUsingIDStudioFollows", testFollowToOneRemoveOpStudioUsingIDStudioStudio)
	t.Run("LinkToStudioUsingIDStudioLinks", testLinkToOneRemoveOpStudioUsingIDStudioStudio)
	t.Run("LinkToUserUsingIDUserLinks", testLinkToOneRemoveOpUserUsingIDUserUser)
	t.Run("PaymentToStudioUsingIDStudioPayments", testPaymentToOneRemoveOpStudioUsingIDStudioStudio)
	t.Run("PaymentToSubscriptionUsingIDSubscriptionPayments", testPaymentToOneRemoveOpSubscriptionUsingIDSubscriptionSubscription)
	t.Run("PaymentToUserUsingIDUserPayments", testPaymentToOneRemoveOpUserUsingIDUserUser)
	t.Run("PostToStudioUsingIDStudioPosts", testPostToOneRemoveOpStudioUsingIDStudioStudio)
	t.Run("ProfileToImageUsingIDAvatarProfile", testProfileToOneRemoveOpImageUsingIDAvatarImage)
	t.Run("StudioToImageUsingIDAvatarStudio", testStudioToOneRemoveOpImageUsingIDAvatarImage)
	t.Run("StudioToImageUsingIDBannerStudio", testStudioToOneRemoveOpImageUsingIDBannerImage)
	t.Run("SubscriptionToStudioUsingIDStudioSubscriptions", testSubscriptionToOneRemoveOpStudioUsingIDStudioStudio)
	t.Run("SubscriptionToUserUsingIDUserSubscriptions", testSubscriptionToOneRemoveOpUserUsingIDUserUser)
	t.Run("TattooToPostUsingIDPostTattoos", testTattooToOneRemoveOpPostUsingIDPostPost)
	t.Run("TattooToStudioUsingIDStudioTattoos", testTattooToOneRemoveOpStudioUsingIDStudioStudio)
	t.Run("ViewToLinkUsingIDLinkViews", testViewToOneRemoveOpLinkUsingIDLinkLink)
	t.Run("ViewToPostUsingIDPostViews", testViewToOneRemoveOpPostUsingIDPostPost)
	t.Run("ViewToProfileUsingIDProfileViews", testViewToOneRemoveOpProfileUsingIDProfileProfile)
	t.Run("ViewToStudioUsingIDStudioViews", testViewToOneRemoveOpStudioUsingIDStudioStudio)
	t.Run("ViewToTattooUsingIDTattooViews", testViewToOneRemoveOpTattooUsingIDTattooTattoo)
	t.Run("ViewToUserUsingIDUserViews", testViewToOneRemoveOpUserUsingIDUserUser)
}

// TestOneToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneSet(t *testing.T) {
	t.Run("AppointmentToReviewUsingIDAppointmentReview", testAppointmentOneToOneSetOpReviewUsingIDAppointmentReview)
	t.Run("ImageToAppointmentImageUsingIDImageAppointmentImage", testImageOneToOneSetOpAppointmentImageUsingIDImageAppointmentImage)
	t.Run("ImageToDesignUsingIDImageDesign", testImageOneToOneSetOpDesignUsingIDImageDesign)
	t.Run("ImageToPostImageUsingIDImagePostImage", testImageOneToOneSetOpPostImageUsingIDImagePostImage)
	t.Run("ImageToProfileUsingIDAvatarProfile", testImageOneToOneSetOpProfileUsingIDAvatarProfile)
	t.Run("ImageToStudioUsingIDAvatarStudio", testImageOneToOneSetOpStudioUsingIDAvatarStudio)
	t.Run("ImageToStudioUsingIDBannerStudio", testImageOneToOneSetOpStudioUsingIDBannerStudio)
	t.Run("ImageToTattooUsingIDImageTattoo", testImageOneToOneSetOpTattooUsingIDImageTattoo)
	t.Run("UserToAuthUsingIDUserAuth", testUserOneToOneSetOpAuthUsingIDUserAuth)
	t.Run("UserToProfileUsingIDUserProfile", testUserOneToOneSetOpProfileUsingIDUserProfile)
	t.Run("UserToTokenPasswordUsingIDUserTokenPassword", testUserOneToOneSetOpTokenPasswordUsingIDUserTokenPassword)
}

// TestOneToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneRemove(t *testing.T) {
	t.Run("ImageToProfileUsingIDAvatarProfile", testImageOneToOneRemoveOpProfileUsingIDAvatarProfile)
	t.Run("ImageToStudioUsingIDAvatarStudio", testImageOneToOneRemoveOpStudioUsingIDAvatarStudio)
	t.Run("ImageToStudioUsingIDBannerStudio", testImageOneToOneRemoveOpStudioUsingIDBannerStudio)
}

// TestToManyAdd tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyAdd(t *testing.T) {
	t.Run("AppointmentToIDAppointmentAppointmentImages", testAppointmentToManyAddOpIDAppointmentAppointmentImages)
	t.Run("AuthToIDAuthSessions", testAuthToManyAddOpIDAuthSessions)
	t.Run("DesignToIDDesignAppointments", testDesignToManyAddOpIDDesignAppointments)
	t.Run("LinkToIDLinkViews", testLinkToManyAddOpIDLinkViews)
	t.Run("PlanToIDPlanSubscriptions", testPlanToManyAddOpIDPlanSubscriptions)
	t.Run("PostToIDPostLikes", testPostToManyAddOpIDPostLikes)
	t.Run("PostToIDPostPostImages", testPostToManyAddOpIDPostPostImages)
	t.Run("PostToIDPostShares", testPostToManyAddOpIDPostShares)
	t.Run("PostToIDPostTattoos", testPostToManyAddOpIDPostTattoos)
	t.Run("PostToIDPostViews", testPostToManyAddOpIDPostViews)
	t.Run("ProfileToIDProfileDesigns", testProfileToManyAddOpIDProfileDesigns)
	t.Run("ProfileToIDProfileFollows", testProfileToManyAddOpIDProfileFollows)
	t.Run("ProfileToIDProfileLikes", testProfileToManyAddOpIDProfileLikes)
	t.Run("ProfileToIDProfilePosts", testProfileToManyAddOpIDProfilePosts)
	t.Run("ProfileToIDProfileReviews", testProfileToManyAddOpIDProfileReviews)
	t.Run("ProfileToIDProfileTattoos", testProfileToManyAddOpIDProfileTattoos)
	t.Run("ProfileToIDProfileViews", testProfileToManyAddOpIDProfileViews)
	t.Run("SessionToIDSessionAccesses", testSessionToManyAddOpIDSessionAccesses)
	t.Run("StudioUserToIDAdminStudioAdminsPermissions", testStudioUserToManyAddOpIDAdminStudioAdminsPermissions)
	t.Run("StudioToIDStudioAppointments", testStudioToManyAddOpIDStudioAppointments)
	t.Run("StudioToIDStudioFollows", testStudioToManyAddOpIDStudioFollows)
	t.Run("StudioToIDStudioLinks", testStudioToManyAddOpIDStudioLinks)
	t.Run("StudioToIDStudioPayments", testStudioToManyAddOpIDStudioPayments)
	t.Run("StudioToIDStudioPosts", testStudioToManyAddOpIDStudioPosts)
	t.Run("StudioToIDStudioStudioUserHistories", testStudioToManyAddOpIDStudioStudioUserHistories)
	t.Run("StudioToIDStudioStudioUsers", testStudioToManyAddOpIDStudioStudioUsers)
	t.Run("StudioToIDStudioSubscriptions", testStudioToManyAddOpIDStudioSubscriptions)
	t.Run("StudioToIDStudioTattoos", testStudioToManyAddOpIDStudioTattoos)
	t.Run("StudioToIDStudioViews", testStudioToManyAddOpIDStudioViews)
	t.Run("SubscriptionToIDSubscriptionPayments", testSubscriptionToManyAddOpIDSubscriptionPayments)
	t.Run("TattooToIDTattooViews", testTattooToManyAddOpIDTattooViews)
	t.Run("UserToIDTattooArtistAppointments", testUserToManyAddOpIDTattooArtistAppointments)
	t.Run("UserToIDUserAppointments", testUserToManyAddOpIDUserAppointments)
	t.Run("UserToIDUserCodes", testUserToManyAddOpIDUserCodes)
	t.Run("UserToIDUserFollows", testUserToManyAddOpIDUserFollows)
	t.Run("UserToIDUserLikes", testUserToManyAddOpIDUserLikes)
	t.Run("UserToIDUserLinks", testUserToManyAddOpIDUserLinks)
	t.Run("UserToIDUserPayments", testUserToManyAddOpIDUserPayments)
	t.Run("UserToIDUserReviews", testUserToManyAddOpIDUserReviews)
	t.Run("UserToIDUserRolesUsers", testUserToManyAddOpIDUserRolesUsers)
	t.Run("UserToIDUserShares", testUserToManyAddOpIDUserShares)
	t.Run("UserToIDUserStudioUserHistories", testUserToManyAddOpIDUserStudioUserHistories)
	t.Run("UserToIDUserStudioUsers", testUserToManyAddOpIDUserStudioUsers)
	t.Run("UserToIDOwnerStudios", testUserToManyAddOpIDOwnerStudios)
	t.Run("UserToIDUserSubscriptions", testUserToManyAddOpIDUserSubscriptions)
	t.Run("UserToIDUserTokens", testUserToManyAddOpIDUserTokens)
	t.Run("UserToIDUserViews", testUserToManyAddOpIDUserViews)
}

// TestToManySet tests cannot be run in parallel
// or deadlocks can occur.
func TestToManySet(t *testing.T) {
	t.Run("DesignToIDDesignAppointments", testDesignToManySetOpIDDesignAppointments)
	t.Run("LinkToIDLinkViews", testLinkToManySetOpIDLinkViews)
	t.Run("PostToIDPostTattoos", testPostToManySetOpIDPostTattoos)
	t.Run("PostToIDPostViews", testPostToManySetOpIDPostViews)
	t.Run("ProfileToIDProfileFollows", testProfileToManySetOpIDProfileFollows)
	t.Run("ProfileToIDProfileViews", testProfileToManySetOpIDProfileViews)
	t.Run("StudioToIDStudioAppointments", testStudioToManySetOpIDStudioAppointments)
	t.Run("StudioToIDStudioFollows", testStudioToManySetOpIDStudioFollows)
	t.Run("StudioToIDStudioLinks", testStudioToManySetOpIDStudioLinks)
	t.Run("StudioToIDStudioPayments", testStudioToManySetOpIDStudioPayments)
	t.Run("StudioToIDStudioPosts", testStudioToManySetOpIDStudioPosts)
	t.Run("StudioToIDStudioSubscriptions", testStudioToManySetOpIDStudioSubscriptions)
	t.Run("StudioToIDStudioTattoos", testStudioToManySetOpIDStudioTattoos)
	t.Run("StudioToIDStudioViews", testStudioToManySetOpIDStudioViews)
	t.Run("SubscriptionToIDSubscriptionPayments", testSubscriptionToManySetOpIDSubscriptionPayments)
	t.Run("TattooToIDTattooViews", testTattooToManySetOpIDTattooViews)
	t.Run("UserToIDTattooArtistAppointments", testUserToManySetOpIDTattooArtistAppointments)
	t.Run("UserToIDUserLinks", testUserToManySetOpIDUserLinks)
	t.Run("UserToIDUserPayments", testUserToManySetOpIDUserPayments)
	t.Run("UserToIDUserSubscriptions", testUserToManySetOpIDUserSubscriptions)
	t.Run("UserToIDUserViews", testUserToManySetOpIDUserViews)
}

// TestToManyRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyRemove(t *testing.T) {
	t.Run("DesignToIDDesignAppointments", testDesignToManyRemoveOpIDDesignAppointments)
	t.Run("LinkToIDLinkViews", testLinkToManyRemoveOpIDLinkViews)
	t.Run("PostToIDPostTattoos", testPostToManyRemoveOpIDPostTattoos)
	t.Run("PostToIDPostViews", testPostToManyRemoveOpIDPostViews)
	t.Run("ProfileToIDProfileFollows", testProfileToManyRemoveOpIDProfileFollows)
	t.Run("ProfileToIDProfileViews", testProfileToManyRemoveOpIDProfileViews)
	t.Run("StudioToIDStudioAppointments", testStudioToManyRemoveOpIDStudioAppointments)
	t.Run("StudioToIDStudioFollows", testStudioToManyRemoveOpIDStudioFollows)
	t.Run("StudioToIDStudioLinks", testStudioToManyRemoveOpIDStudioLinks)
	t.Run("StudioToIDStudioPayments", testStudioToManyRemoveOpIDStudioPayments)
	t.Run("StudioToIDStudioPosts", testStudioToManyRemoveOpIDStudioPosts)
	t.Run("StudioToIDStudioSubscriptions", testStudioToManyRemoveOpIDStudioSubscriptions)
	t.Run("StudioToIDStudioTattoos", testStudioToManyRemoveOpIDStudioTattoos)
	t.Run("StudioToIDStudioViews", testStudioToManyRemoveOpIDStudioViews)
	t.Run("SubscriptionToIDSubscriptionPayments", testSubscriptionToManyRemoveOpIDSubscriptionPayments)
	t.Run("TattooToIDTattooViews", testTattooToManyRemoveOpIDTattooViews)
	t.Run("UserToIDTattooArtistAppointments", testUserToManyRemoveOpIDTattooArtistAppointments)
	t.Run("UserToIDUserLinks", testUserToManyRemoveOpIDUserLinks)
	t.Run("UserToIDUserPayments", testUserToManyRemoveOpIDUserPayments)
	t.Run("UserToIDUserSubscriptions", testUserToManyRemoveOpIDUserSubscriptions)
	t.Run("UserToIDUserViews", testUserToManyRemoveOpIDUserViews)
}
