// Code generated by SQLBoiler 4.19.5 (https://github.com/aarondl/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import (
	"strconv"

	"github.com/aarondl/sqlboiler/v4/boil"
	"github.com/aarondl/strmangle"
	"github.com/friendsofgo/errors"
)

// M type is for providing columns and column values to UpdateAll.
type M map[string]interface{}

// ErrSyncFail occurs during insert when the record could not be retrieved in
// order to populate default value information. This usually happens when LastInsertId
// fails or there was a primary key configuration that was not resolvable.
var ErrSyncFail = errors.New("models: failed to synchronize data after insert")

type insertCache struct {
	query        string
	retQuery     string
	valueMapping []uint64
	retMapping   []uint64
}

type updateCache struct {
	query        string
	valueMapping []uint64
}

func makeCacheKey(cols boil.Columns, nzDefaults []string) string {
	buf := strmangle.GetBuffer()

	buf.WriteString(strconv.Itoa(cols.Kind))
	for _, w := range cols.Cols {
		buf.WriteString(w)
	}

	if len(nzDefaults) != 0 {
		buf.WriteByte('.')
	}
	for _, nz := range nzDefaults {
		buf.WriteString(nz)
	}

	str := buf.String()
	strmangle.PutBuffer(buf)
	return str
}

// Enum values for AppointmentStatus
const (
<<<<<<< HEAD
	AppointmentStatusPaid      string = "paid"
	AppointmentStatusScheduled string = "scheduled"
	AppointmentStatusCanceled  string = "canceled"
	AppointmentStatusCreated   string = "created"
=======
	AppointmentStatusCreated   string = "created"
	AppointmentStatusScheduled string = "scheduled"
	AppointmentStatusCanceled  string = "canceled"
	AppointmentStatusReviewed  string = "reviewed"
>>>>>>> origin/master
)

func AllAppointmentStatus() []string {
	return []string{
<<<<<<< HEAD
		AppointmentStatusPaid,
		AppointmentStatusScheduled,
		AppointmentStatusCanceled,
		AppointmentStatusCreated,
=======
		AppointmentStatusCreated,
		AppointmentStatusScheduled,
		AppointmentStatusCanceled,
		AppointmentStatusReviewed,
>>>>>>> origin/master
	}
}

// Enum values for TattooArea
const (
	TattooAreaArm     string = "arm"
	TattooAreaLeg     string = "leg"
	TattooAreaBack    string = "back"
	TattooAreaChest   string = "chest"
	TattooAreaAbdomen string = "abdomen"
	TattooAreaNeck    string = "neck"
	TattooAreaHead    string = "head"
	TattooAreaHand    string = "hand"
	TattooAreaFoot    string = "foot"
	TattooAreaHip     string = "hip"
	TattooAreaOther   string = "other"
)

func AllTattooArea() []string {
	return []string{
		TattooAreaArm,
		TattooAreaLeg,
		TattooAreaBack,
		TattooAreaChest,
		TattooAreaAbdomen,
		TattooAreaNeck,
		TattooAreaHead,
		TattooAreaHand,
		TattooAreaFoot,
		TattooAreaHip,
		TattooAreaOther,
	}
}

// Enum values for TattooColor
const (
	TattooColorBlack     string = "black"
	TattooColorFullColor string = "full_color"
)

func AllTattooColor() []string {
	return []string{
		TattooColorBlack,
		TattooColorFullColor,
	}
}

// Enum values for RoleName
const (
	RoleNameAdmin        string = "admin"
	RoleNameUser         string = "user"
	RoleNameTattooArtist string = "tattooArtist"
)

func AllRoleName() []string {
	return []string{
		RoleNameAdmin,
		RoleNameUser,
		RoleNameTattooArtist,
	}
}
